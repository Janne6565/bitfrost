apiVersion: apps/v1
kind: Deployment
metadata:
  name: bitfrost-backend
  namespace: ase-12
  labels:
    app.kubernetes.io/name: bitfrost-backend
    app.kubernetes.io/instance: bitfrost-backend
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: bitfrost-backend
      app.kubernetes.io/instance: bitfrost-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bitfrost-backend
        app.kubernetes.io/instance: bitfrost-backend
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: app
          image: janne5656/bitfrost-backend:v1.0.9
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          env:
            # Enable graceful shutdown at app level (align with terminationGracePeriodSeconds)
            - name: SERVER_SHUTDOWN
              value: graceful
            - name: POSTGRES_URL
              value: jdbc:postgresql://postgres.db:5432/appdb
            - name: POSTGRES_USER
              value: ase-12
            - name: SPRING_PROFILES_ACTIVE
              value: prod
            - name: APP_JWT_KEYS_PUBLIC
              value: file:/app/keys/public_key.pem
            - name: APP_JWT_KEYS_PRIVATE
              value: file:/app/keys/private_key.pem
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres.db:5432/appdb
            - name: SPRING_DATASOURCE_USERNAME
              value: ase-12
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bitfrost-postgres
                  key: password
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bitfrost-postgres
                  key: password

          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 6
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 1
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            failureThreshold: 30

          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1024Mi"

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop: [ "ALL" ]

          volumeMounts:
            - name: data
              mountPath: /app/data
            - name: tmp
              mountPath: /tmp
            - mountPath: /app/keys/private_key.pem
              name: bitfrost-private-key
              readOnly: true
              subPath: private_key.pem
            - mountPath: /app/keys/public_key.pem
              name: bitfrost-private-key
              readOnly: true
              subPath: public_key.pem

      volumes:
        - name: tmp
          emptyDir: { }
        - name: data
          emptyDir: { }
        - name: bitfrost-private-key
          secret:
            defaultMode: 420
            items:
              - key: private_key.pem
                path: private_key.pem
              - key: public_key.pem
                path: public_key.pem
            secretName: bitfrost-private-key
